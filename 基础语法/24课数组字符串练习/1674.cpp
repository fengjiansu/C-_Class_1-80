/*
(1674)寻找鞍点

题目描述
给定一个5×5的矩阵,每行只有一个最大值,每列只
有一个最小值,寻找这个矩阵的鞍点。鞍点指的是矩
阵中的一个元素,它是所在行的最大值,并且是所在
列的最小值。
例如:在下面的例子中(第4行第1列的元素就是鞍
点,值为8)。
113569
12 4 7 8 10
10 5 6 9 11
8 6 4  7  2
15 10 11 20 25

输入
输入包含一个5×5的矩阵。数据的绝对值不超过
40000,保证矩阵内数据没有重复,而且鞍点只有一
个。

输出
如果存在鞍点,输出鞍点所在的行、列及其值,如果
不存在,输出"not found"。
输入样例
11 3 5 6 9
12 4 7 8 10
10 5 6 9 11
8 6  4  7  2
15 10 11 20 25

输出样例
4 1 8
 */
#include <bits/stdc++.h>

using namespace std;
int a[10][10];
int main()
{
    for (int i = 1; i <= 5; i++)
    {
        for (int j = 1; j <= 5; j++)
        {
            cin >> a[i][j];
        }
    }
    for (int i = 1; i <= 5; i++)
    {
        for (int j = 1; j <= 5; j++)
        {
            int flag = 0;
            for (int k = 1; k <= 5; k++)
            {
                if (a[i][k] > a[i][j])
                { // 看该行是否有其它点比该点大
                    flag = 1;
                    break;
                }
            }
            for (int k = 1; k <= 5; k++)
            {
                if (a[k][j] < a[i][j])
                { // 看该列是否有其它点比该点小
                    flag = 1;
                    break;
                }
            }
            if (!flag)
            { // 如果找到鞍点，输出行列和值，结束整个循环
                cout << i << " " << j << " " << a[i][j];
                return 0;
            }
        }
    }
    cout << "not found"; // 没找到输出not found
    return 0;
}
